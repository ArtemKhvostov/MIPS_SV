no.		|program					|data											| execution history	|
0		|lwc1		$f0 200($0)		| 0000000f	(int15)		! data[0] to f0			| f0	0xf			|
1		|lwc1		$f2 204($0)		| 3F8001A3	(1.00005)	! data[1] to f2			| f2	0x3F8001A3	|
2		|cvt.s.w	$f4 $f0			| 41700000	(15)		! f4 = (toFloat)f0		| f4	0x41700000	|
3		|add.s		$f0 $f2 $f4		| 4180001A	(16.00005)	! f0 = f2 + f4			| f0	0x4180001a	|
4		|mfc1		$s0 $f0			| 4180001A	(16.00005)	! s0 = f0				| s0	0x4180001a	|
5		|sw			$s0 20C($0)		| 4180001A	(16.00005)	! s0 to data[3]			| 20C	0x4180001a  |
6		|lw			$s1 208($0)		| 440df102  (567.76575) ! data[2] to s1			| s1	0x440df102	|
7		|mtc1		$f0 $s1			| 440df102  (567.76575) ! f0 = s1				| f0	0x440df102	|
8		|cvt.w.s	$f0 $f0			| 00000238  (568)		! f0 = (toInt)f0		| f0	0x00000238	|
9		|swc1		$f0 200($0)		| 00000238	(568)		! f0 to data[0]			| 200	0x00000238	|
10		|sub.s		$f0 $f4 $f2		| 415fffcc	(13.99995)	! f0 = f4 - f2			| f0	0x415fffcc	|
11		|c.lt.s		$f0 $f4			| (true)				! set if f0 < f4		| c.lt	(true)		|
12		|bc1t		1:				| branch take			! branch if true		| bc1t	(take)		|
13		|lwc1		$f0 200($0)		| 0000000f	(int15)		! data[0] to f0			| 					|
14 1:	|c.eq.s		$f0 $f4			| (false)				! set if f0 == f4		| c.eq  (false)		|
15		|bc1f		2:				| branch take			! branch if false		| bc1f	(take)		|
16	3:	|add.s		$f2 $f2 $f0		| 41700000	(15)		! f2 += f0				|
17		|sub.s		$f0 $f0 $f2		| bf8001a0	(-1.0005)	! f0 -= f2				|
18	2:	|c.le.s		$f0 $f2			| (false)				! f0 <= f2				| c.le  (false)		|
19		|bc1t		1:				| not take				! branch if true		| bc1t  (not take)	|
20		|j			3:																| jump				|
																					| f2	0x41700000	|
																					| f0	0xbf8001a0	|